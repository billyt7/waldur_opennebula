# Generated by Django 1.11.20 on 2019-06-18 11:00
import django.db.models.deletion
from django.db import migrations, models

import waldur_core.core.fields
import waldur_core.core.models
import waldur_core.logging.loggers
import waldur_core.structure.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('structure', '0009_project_is_removed'),
    ]

    operations = [
        migrations.CreateModel(
            name='OpenNebulaService',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('uuid', waldur_core.core.fields.UUIDField()),
                (
                    'available_for_all',
                    models.BooleanField(
                        default=False,
                        help_text='Service will be automatically added to all customers projects if it is available for all',
                    ),
                ),
                (
                    'customer',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='structure.Customer',
                        verbose_name='organization',
                    ),
                ),
            ],
            options={
                'verbose_name': 'OpenNebula provider',
                'verbose_name_plural': 'OpenNebula providers',
            },
            bases=(
                waldur_core.core.models.DescendantMixin,
                waldur_core.structure.models.StructureLoggableMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name='OpenNebulaServiceProjectLink',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'project',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='structure.Project',
                    ),
                ),
                (
                    'service',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='waldur_opennebula.OpenNebulaService',
                    ),
                ),
            ],
            options={
                'abstract': False,
                'verbose_name': 'OpenNebula provider project link',
                'verbose_name_plural': 'OpenNebula provider project links',
            },
            bases=(
                waldur_core.core.models.DescendantMixin,
                waldur_core.logging.loggers.LoggableMixin,
                models.Model,
            ),
        ),
        migrations.AddField(
            model_name='opennebulaservice',
            name='projects',
            field=models.ManyToManyField(
                related_name='_opennebulaservice_projects_+',
                through='waldur_opennebula.OpenNebulaServiceProjectLink',
                to='structure.Project',
            ),
        ),
        migrations.AddField(
            model_name='opennebulaservice',
            name='settings',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='structure.ServiceSettings',
            ),
        ),
        migrations.AlterUniqueTogether(
            name='opennebulaserviceprojectlink',
            unique_together=set([('service', 'project')]),
        ),
        migrations.AlterUniqueTogether(
            name='opennebulaservice', unique_together=set([('customer', 'settings')]),
        ),
    ]
